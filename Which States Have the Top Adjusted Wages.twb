<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20192.19.0621.1547                               -->
<workbook original-version='18.1' source-build='2019.2.1 (20192.19.0621.1547)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <SheetIdentifierTracking ignorable='true' predowngraded='true' />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Sheet1 (salary_data_states_corrected)' inline='true' name='federated.1rnsf9d0cwda0m16bsgn61jjzk8w' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='salary_data_states_corrected' name='excel-direct.1lzy89n0c18cp71ekga0e02shb64'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/lenovo/Desktop/USA Salary Data Visualization/salary_data_states_corrected.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
          <named-connection caption='price_parity' name='excel-direct.186139o1mixee81ecic2s09jxmsl'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/lenovo/Desktop/USA Salary Data Visualization/price_parity.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.1lzy89n0c18cp71ekga0e02shb64' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:AA10001:no:A1:AA10001:0' header='yes' outcome='2'>
            <column datatype='string' name='CASE_NUMBER' ordinal='0' />
            <column datatype='string' name='CASE_STATUS' ordinal='1' />
            <column datatype='date' date-parse-format='MM/dd/yyyy' name='CASE_RECEIVED_DATE' ordinal='2' />
            <column datatype='date' date-parse-format='MM/dd/yyyy' name='DECISION_DATE' ordinal='3' />
            <column datatype='string' name='EMPLOYER_NAME' ordinal='4' />
            <column datatype='string' name='PREVAILING_WAGE_SUBMITTED' ordinal='5' />
            <column datatype='string' name='PREVAILING_WAGE_SUBMITTED_UNIT' ordinal='6' />
            <column datatype='string' name='PAID_WAGE_SUBMITTED' ordinal='7' />
            <column datatype='string' name='PAID_WAGE_SUBMITTED_UNIT' ordinal='8' />
            <column datatype='string' name='JOB_TITLE' ordinal='9' />
            <column datatype='string' name='WORK_CITY' ordinal='10' />
            <column datatype='string' name='EDUCATION_LEVEL_REQUIRED' ordinal='11' />
            <column datatype='string' name='COLLEGE_MAJOR_REQUIRED' ordinal='12' />
            <column datatype='string' name='EXPERIENCE_REQUIRED_Y_N' ordinal='13' />
            <column datatype='string' name='EXPERIENCE_REQUIRED_NUM_MONTHS' ordinal='14' />
            <column datatype='string' name='COUNTRY_OF_CITIZENSHIP' ordinal='15' />
            <column datatype='string' name='PREVAILING_WAGE_SOC_CODE' ordinal='16' />
            <column datatype='string' name='PREVAILING_WAGE_SOC_TITLE' ordinal='17' />
            <column datatype='string' name='WORK_STATE' ordinal='18' />
            <column datatype='string' name='WORK_STATE_ABBREVIATION' ordinal='19' />
            <column datatype='string' name='WORK_POSTAL_CODE' ordinal='20' />
            <column datatype='string' name='FULL_TIME_POSITION_Y_N' ordinal='21' />
            <column datatype='string' name='VISA_CLASS' ordinal='22' />
            <column datatype='real' name='PREVAILING_WAGE_PER_YEAR' ordinal='23' />
            <column datatype='real' name='PAID_WAGE_PER_YEAR' ordinal='24' />
            <column datatype='string' name='JOB_TITLE_SUBGROUP' ordinal='25' />
            <column datatype='integer' name='order' ordinal='26' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:AA10001:no:A1:AA10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CASE_NUMBER</remote-name>
            <remote-type>130</remote-type>
            <local-name>[CASE_NUMBER]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>CASE_NUMBER</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CASE_STATUS</remote-name>
            <remote-type>130</remote-type>
            <local-name>[CASE_STATUS]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>CASE_STATUS</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CASE_RECEIVED_DATE</remote-name>
            <remote-type>7</remote-type>
            <local-name>[CASE_RECEIVED_DATE]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>CASE_RECEIVED_DATE</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DECISION_DATE</remote-name>
            <remote-type>7</remote-type>
            <local-name>[DECISION_DATE]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>DECISION_DATE</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>EMPLOYER_NAME</remote-name>
            <remote-type>130</remote-type>
            <local-name>[EMPLOYER_NAME]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>EMPLOYER_NAME</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PREVAILING_WAGE_SUBMITTED</remote-name>
            <remote-type>130</remote-type>
            <local-name>[PREVAILING_WAGE_SUBMITTED]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>PREVAILING_WAGE_SUBMITTED</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PREVAILING_WAGE_SUBMITTED_UNIT</remote-name>
            <remote-type>130</remote-type>
            <local-name>[PREVAILING_WAGE_SUBMITTED_UNIT]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>PREVAILING_WAGE_SUBMITTED_UNIT</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PAID_WAGE_SUBMITTED</remote-name>
            <remote-type>130</remote-type>
            <local-name>[PAID_WAGE_SUBMITTED]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>PAID_WAGE_SUBMITTED</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PAID_WAGE_SUBMITTED_UNIT</remote-name>
            <remote-type>130</remote-type>
            <local-name>[PAID_WAGE_SUBMITTED_UNIT]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>PAID_WAGE_SUBMITTED_UNIT</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>JOB_TITLE</remote-name>
            <remote-type>130</remote-type>
            <local-name>[JOB_TITLE]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>JOB_TITLE</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>WORK_CITY</remote-name>
            <remote-type>130</remote-type>
            <local-name>[WORK_CITY]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>WORK_CITY</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>EDUCATION_LEVEL_REQUIRED</remote-name>
            <remote-type>130</remote-type>
            <local-name>[EDUCATION_LEVEL_REQUIRED]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>EDUCATION_LEVEL_REQUIRED</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>COLLEGE_MAJOR_REQUIRED</remote-name>
            <remote-type>130</remote-type>
            <local-name>[COLLEGE_MAJOR_REQUIRED]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>COLLEGE_MAJOR_REQUIRED</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>EXPERIENCE_REQUIRED_Y_N</remote-name>
            <remote-type>130</remote-type>
            <local-name>[EXPERIENCE_REQUIRED_Y_N]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>EXPERIENCE_REQUIRED_Y_N</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>EXPERIENCE_REQUIRED_NUM_MONTHS</remote-name>
            <remote-type>130</remote-type>
            <local-name>[EXPERIENCE_REQUIRED_NUM_MONTHS]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>EXPERIENCE_REQUIRED_NUM_MONTHS</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>COUNTRY_OF_CITIZENSHIP</remote-name>
            <remote-type>130</remote-type>
            <local-name>[COUNTRY_OF_CITIZENSHIP]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>COUNTRY_OF_CITIZENSHIP</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PREVAILING_WAGE_SOC_CODE</remote-name>
            <remote-type>130</remote-type>
            <local-name>[PREVAILING_WAGE_SOC_CODE]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>PREVAILING_WAGE_SOC_CODE</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PREVAILING_WAGE_SOC_TITLE</remote-name>
            <remote-type>130</remote-type>
            <local-name>[PREVAILING_WAGE_SOC_TITLE]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>PREVAILING_WAGE_SOC_TITLE</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>WORK_STATE</remote-name>
            <remote-type>130</remote-type>
            <local-name>[WORK_STATE]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>WORK_STATE</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>WORK_STATE_ABBREVIATION</remote-name>
            <remote-type>130</remote-type>
            <local-name>[WORK_STATE_ABBREVIATION]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>WORK_STATE_ABBREVIATION</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>WORK_POSTAL_CODE</remote-name>
            <remote-type>130</remote-type>
            <local-name>[WORK_POSTAL_CODE]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>WORK_POSTAL_CODE</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FULL_TIME_POSITION_Y_N</remote-name>
            <remote-type>130</remote-type>
            <local-name>[FULL_TIME_POSITION_Y_N]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>FULL_TIME_POSITION_Y_N</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>VISA_CLASS</remote-name>
            <remote-type>130</remote-type>
            <local-name>[VISA_CLASS]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>VISA_CLASS</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PREVAILING_WAGE_PER_YEAR</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PREVAILING_WAGE_PER_YEAR]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>PREVAILING_WAGE_PER_YEAR</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PAID_WAGE_PER_YEAR</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PAID_WAGE_PER_YEAR]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>PAID_WAGE_PER_YEAR</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>JOB_TITLE_SUBGROUP</remote-name>
            <remote-type>130</remote-type>
            <local-name>[JOB_TITLE_SUBGROUP]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>JOB_TITLE_SUBGROUP</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>order</remote-name>
            <remote-type>20</remote-type>
            <local-name>[order]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>order</remote-alias>
            <ordinal>26</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Case Number' datatype='string' name='[CASE_NUMBER]' role='dimension' type='nominal' />
      <column caption='Case Received Date' datatype='date' name='[CASE_RECEIVED_DATE]' role='dimension' type='ordinal' />
      <column caption='Case Status' datatype='string' name='[CASE_STATUS]' role='dimension' type='nominal' />
      <column caption='College Major Required' datatype='string' name='[COLLEGE_MAJOR_REQUIRED]' role='dimension' type='nominal' />
      <column caption='Country Of Citizenship' datatype='string' name='[COUNTRY_OF_CITIZENSHIP]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Rank' datatype='integer' name='[Calculation_904379112738459648]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='INDEX()'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='States We Are Interested In' datatype='string' name='[Calculation_904379112741040129]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF  [WORK_STATE] = &apos;California&apos;&#13;&#10;OR  [WORK_STATE] = &apos;Washington&apos;&#13;&#10;OR  [WORK_STATE] = &apos;Texas&apos;&#13;&#10;OR  [WORK_STATE] = &apos;Alabama&apos;&#13;&#10;OR  [WORK_STATE] = &apos;North Carolina&apos;&#13;&#10;OR  [WORK_STATE] = &apos;New York&apos;&#13;&#10;OR  [WORK_STATE] = &apos;Massachusetts&apos;&#13;&#10;OR  [WORK_STATE] = &apos;Maine&apos;&#13;&#10;THEN &quot;View&quot;&#13;&#10;ELSE &quot;Don&apos;t View&quot;&#13;&#10;END' />
      </column>
      <column caption='Difference Between Prevailing and Paid Wage' datatype='real' name='[Calculation_904379112744640514]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[PAID_WAGE_PER_YEAR] - [PREVAILING_WAGE_PER_YEAR]' />
      </column>
      <column caption='Paying Less Than Prevailing Wage' datatype='string' name='[Calculation_904379112745398275]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Calculation_904379112744640514] &lt; 0&#13;&#10;THEN &apos;Paid Less Than Prevailing Wage&apos;&#13;&#10;ELSE &apos;Paid Prevailing Wage or Higher&apos;&#13;&#10;END' />
      </column>
      <column caption='Adjusted Paid Wage' datatype='real' name='[Calculation_904379112755048453]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(MEDIAN([PAID_WAGE_PER_YEAR])/ATTR([federated.1xjmzkx0pd9z3x1a5hzhx000vxfn].[Price Parity]))*100' />
      </column>
      <column caption='Decision Date' datatype='date' name='[DECISION_DATE]' role='dimension' type='ordinal' />
      <column caption='Education Level Required' datatype='string' name='[EDUCATION_LEVEL_REQUIRED]' role='dimension' type='nominal' />
      <column caption='Employer Name' datatype='string' name='[EMPLOYER_NAME]' role='dimension' type='nominal' />
      <column caption='Experience Required Num Months' datatype='string' name='[EXPERIENCE_REQUIRED_NUM_MONTHS]' role='dimension' type='nominal' />
      <column caption='Experience Required Y N' datatype='string' name='[EXPERIENCE_REQUIRED_Y_N]' role='dimension' type='nominal' />
      <column caption='Full Time Position Y N' datatype='string' name='[FULL_TIME_POSITION_Y_N]' role='dimension' type='nominal' />
      <column caption='Job Title' datatype='string' name='[JOB_TITLE]' role='dimension' type='nominal' />
      <column caption='Job Title Subgroup' datatype='string' name='[JOB_TITLE_SUBGROUP]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='Median' caption='Paid Wage Per Year' datatype='real' name='[PAID_WAGE_PER_YEAR]' role='measure' type='quantitative' />
      <column aggregation='CountD' caption='Paid Wage Submitted' datatype='string' default-role='measure' default-type='quantitative' name='[PAID_WAGE_SUBMITTED]' role='dimension' type='nominal' />
      <column caption='Paid Wage Submitted Unit' datatype='string' name='[PAID_WAGE_SUBMITTED_UNIT]' role='dimension' type='nominal' />
      <column aggregation='Median' caption='Prevailing Wage Per Year' datatype='real' name='[PREVAILING_WAGE_PER_YEAR]' role='measure' type='quantitative' />
      <column caption='Prevailing Wage Soc Code' datatype='string' name='[PREVAILING_WAGE_SOC_CODE]' role='dimension' type='nominal' />
      <column caption='Prevailing Wage Soc Title' datatype='string' name='[PREVAILING_WAGE_SOC_TITLE]' role='dimension' type='nominal' />
      <column aggregation='CountD' caption='Prevailing Wage Submitted' datatype='string' default-role='measure' default-type='quantitative' name='[PREVAILING_WAGE_SUBMITTED]' role='dimension' type='nominal' />
      <column caption='Prevailing Wage Submitted Unit' datatype='string' name='[PREVAILING_WAGE_SUBMITTED_UNIT]' role='dimension' type='nominal' />
      <column caption='Visa Class' datatype='string' name='[VISA_CLASS]' role='dimension' type='nominal' />
      <column caption='Work City' datatype='string' name='[WORK_CITY]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='Work Postal Code' datatype='string' name='[WORK_POSTAL_CODE]' role='dimension' type='nominal' />
      <column caption='Work State' datatype='string' name='[WORK_STATE]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Work State Abbreviation' datatype='string' name='[WORK_STATE_ABBREVIATION]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Order' datatype='integer' name='[order]' role='measure' type='quantitative' />
      <column-instance column='[Calculation_904379112755048453]' derivation='User' name='[diff:usr:Calculation_904379112755048453:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[PAID_WAGE_PER_YEAR]' derivation='Median' name='[med:PAID_WAGE_PER_YEAR:qk]' pivot='key' type='quantitative' />
      <column-instance column='[JOB_TITLE_SUBGROUP]' derivation='None' name='[none:JOB_TITLE_SUBGROUP:nk]' pivot='key' type='nominal' />
      <column-instance column='[WORK_STATE]' derivation='None' name='[none:WORK_STATE:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_904379112755048453]' derivation='User' name='[rank:usr:Calculation_904379112755048453:qk:1]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Field' rank-options='Competition,Descending' type='Rank'>
          <order field='[federated.1rnsf9d0cwda0m16bsgn61jjzk8w].[none:JOB_TITLE_SUBGROUP:nk]' />
          <order field='[federated.1rnsf9d0cwda0m16bsgn61jjzk8w].[none:WORK_STATE:nk]' />
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_904379112755048453]' derivation='User' name='[rank:usr:Calculation_904379112755048453:qk:2]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.1rnsf9d0cwda0m16bsgn61jjzk8w].[none:WORK_STATE:nk]' ordering-type='Field' rank-options='Competition,Descending' type='Rank' />
      </column-instance>
      <column-instance column='[Calculation_904379112755048453]' derivation='User' name='[rank:usr:Calculation_904379112755048453:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' rank-options='Competition,Descending' type='Rank' />
      </column-instance>
      <column-instance column='[Calculation_904379112755048453]' derivation='User' name='[usr:Calculation_904379112755048453:qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.609687' measure-ordering='alphabetic' measure-percentage='0.390313' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:JOB_TITLE_SUBGROUP:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;assistant professor&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;data scientist&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;data analyst&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;software engineer&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;business analyst&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;management consultant&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;attorney&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;teacher&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1rnsf9d0cwda0m16bsgn61jjzk8w].[diff:usr:Calculation_904379112755048453:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1rnsf9d0cwda0m16bsgn61jjzk8w].[rank:usr:Calculation_904379112755048453:qk:1]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1rnsf9d0cwda0m16bsgn61jjzk8w].[rank:usr:Calculation_904379112755048453:qk:2]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1rnsf9d0cwda0m16bsgn61jjzk8w].[rank:usr:Calculation_904379112755048453:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1rnsf9d0cwda0m16bsgn61jjzk8w].[usr:Calculation_904379112755048453:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1rnsf9d0cwda0m16bsgn61jjzk8w].[med:PAID_WAGE_PER_YEAR:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Egypt&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='federated.1xjmzkx0pd9z3x1a5hzhx000vxfn'>
        <column datatype='real' name='[Price Parity]' role='measure' type='quantitative' />
      </datasource-dependencies>
    </datasource>
    <datasource caption='Sheet1 (price_parity)' inline='true' name='federated.1xjmzkx0pd9z3x1a5hzhx000vxfn' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='price_parity' name='excel-direct.082fnrl0fvxzyo193z48c1xqlg85'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/lenovo/Desktop/USA Salary Data Visualization/price_parity.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.082fnrl0fvxzyo193z48c1xqlg85' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B52:no:A1:B52:0' header='yes' outcome='6'>
            <column datatype='string' name='State' ordinal='0' />
            <column datatype='real' name='Price Parity' ordinal='1' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Price Parity</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Price Parity]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Price Parity</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B52:no:A1:B52:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.444444' measure-ordering='alphabetic' measure-percentage='0.555556' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Egypt&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <datasource-relationships>
    <datasource-dependencies datasource='federated.1rnsf9d0cwda0m16bsgn61jjzk8w'>
      <column caption='Work State' datatype='string' name='[WORK_STATE]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column-instance column='[WORK_STATE]' derivation='None' name='[none:WORK_STATE:nk]' pivot='key' type='nominal' />
    </datasource-dependencies>
    <datasource-dependencies datasource='federated.1xjmzkx0pd9z3x1a5hzhx000vxfn'>
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
    </datasource-dependencies>
    <datasource-relationship source='federated.1rnsf9d0cwda0m16bsgn61jjzk8w' target='federated.1xjmzkx0pd9z3x1a5hzhx000vxfn'>
      <column-mapping>
        <map key='[federated.1rnsf9d0cwda0m16bsgn61jjzk8w].[none:WORK_STATE:nk]' value='[federated.1xjmzkx0pd9z3x1a5hzhx000vxfn].[none:State:nk]' />
      </column-mapping>
    </datasource-relationship>
  </datasource-relationships>
  <worksheets>
    <worksheet name='Companies that pay less than Average'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (salary_data_states_corrected)' name='federated.1rnsf9d0cwda0m16bsgn61jjzk8w' />
          </datasources>
          <datasource-dependencies datasource='federated.1rnsf9d0cwda0m16bsgn61jjzk8w'>
            <column caption='Difference Between Prevailing and Paid Wage' datatype='real' name='[Calculation_904379112744640514]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[PAID_WAGE_PER_YEAR] - [PREVAILING_WAGE_PER_YEAR]' />
            </column>
            <column caption='Paying Less Than Prevailing Wage' datatype='string' name='[Calculation_904379112745398275]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_904379112744640514] &lt; 0&#13;&#10;THEN &apos;Paid Less Than Prevailing Wage&apos;&#13;&#10;ELSE &apos;Paid Prevailing Wage or Higher&apos;&#13;&#10;END' />
            </column>
            <column caption='Employer Name' datatype='string' name='[EMPLOYER_NAME]' role='dimension' type='nominal' />
            <column caption='Job Title Subgroup' datatype='string' name='[JOB_TITLE_SUBGROUP]' role='dimension' type='nominal' />
            <column aggregation='Median' caption='Paid Wage Per Year' datatype='real' name='[PAID_WAGE_PER_YEAR]' role='measure' type='quantitative' />
            <column aggregation='Median' caption='Prevailing Wage Per Year' datatype='real' name='[PREVAILING_WAGE_PER_YEAR]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_904379112744640514]' derivation='Count' name='[cnt:Calculation_904379112744640514:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_904379112745398275]' derivation='None' name='[none:Calculation_904379112745398275:nk]' pivot='key' type='nominal' />
            <column-instance column='[EMPLOYER_NAME]' derivation='None' name='[none:EMPLOYER_NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[JOB_TITLE_SUBGROUP]' derivation='None' name='[none:JOB_TITLE_SUBGROUP:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1rnsf9d0cwda0m16bsgn61jjzk8w].[cnt:Calculation_904379112744640514:qk]' included-values='in-range'>
            <min>5</min>
          </filter>
          <filter class='categorical' column='[federated.1rnsf9d0cwda0m16bsgn61jjzk8w].[none:Calculation_904379112745398275:nk]'>
            <groupfilter function='member' level='[none:Calculation_904379112745398275:nk]' member='&quot;Paid Less Than Prevailing Wage&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1rnsf9d0cwda0m16bsgn61jjzk8w].[none:JOB_TITLE_SUBGROUP:nk]'>
            <groupfilter function='member' level='[none:JOB_TITLE_SUBGROUP:nk]' member='&quot;software engineer&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1rnsf9d0cwda0m16bsgn61jjzk8w].[none:Calculation_904379112745398275:nk]</column>
            <column>[federated.1rnsf9d0cwda0m16bsgn61jjzk8w].[none:JOB_TITLE_SUBGROUP:nk]</column>
            <column>[federated.1rnsf9d0cwda0m16bsgn61jjzk8w].[cnt:Calculation_904379112744640514:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1rnsf9d0cwda0m16bsgn61jjzk8w].[cnt:Calculation_904379112744640514:qk]' palette='red_blue_diverging_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.1rnsf9d0cwda0m16bsgn61jjzk8w].[cnt:Calculation_904379112744640514:qk]' />
              <color column='[federated.1rnsf9d0cwda0m16bsgn61jjzk8w].[cnt:Calculation_904379112744640514:qk]' />
              <text column='[federated.1rnsf9d0cwda0m16bsgn61jjzk8w].[none:JOB_TITLE_SUBGROUP:nk]' />
              <text column='[federated.1rnsf9d0cwda0m16bsgn61jjzk8w].[none:EMPLOYER_NAME:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-transparency' value='255' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#59a14f' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{7F0BFAB8-C345-42DC-825F-E7B537F47628}' />
    </worksheet>
    <worksheet name='Living Variance per State'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (salary_data_states_corrected)' name='federated.1rnsf9d0cwda0m16bsgn61jjzk8w' />
            <datasource caption='Sheet1 (price_parity)' name='federated.1xjmzkx0pd9z3x1a5hzhx000vxfn' />
          </datasources>
          <datasource-dependencies datasource='federated.1rnsf9d0cwda0m16bsgn61jjzk8w'>
            <column caption='States We Are Interested In' datatype='string' name='[Calculation_904379112741040129]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF  [WORK_STATE] = &apos;California&apos;&#13;&#10;OR  [WORK_STATE] = &apos;Washington&apos;&#13;&#10;OR  [WORK_STATE] = &apos;Texas&apos;&#13;&#10;OR  [WORK_STATE] = &apos;Alabama&apos;&#13;&#10;OR  [WORK_STATE] = &apos;North Carolina&apos;&#13;&#10;OR  [WORK_STATE] = &apos;New York&apos;&#13;&#10;OR  [WORK_STATE] = &apos;Massachusetts&apos;&#13;&#10;OR  [WORK_STATE] = &apos;Maine&apos;&#13;&#10;THEN &quot;View&quot;&#13;&#10;ELSE &quot;Don&apos;t View&quot;&#13;&#10;END' />
            </column>
            <column caption='Adjusted Paid Wage' datatype='real' name='[Calculation_904379112755048453]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(MEDIAN([PAID_WAGE_PER_YEAR])/ATTR([federated.1xjmzkx0pd9z3x1a5hzhx000vxfn].[Price Parity]))*100' />
            </column>
            <column caption='Job Title Subgroup' datatype='string' name='[JOB_TITLE_SUBGROUP]' role='dimension' type='nominal' />
            <column aggregation='Median' caption='Paid Wage Per Year' datatype='real' name='[PAID_WAGE_PER_YEAR]' role='measure' type='quantitative' />
            <column caption='Work State' datatype='string' name='[WORK_STATE]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[PAID_WAGE_PER_YEAR]' derivation='Median' name='[med:PAID_WAGE_PER_YEAR:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_904379112741040129]' derivation='None' name='[none:Calculation_904379112741040129:nk]' pivot='key' type='nominal' />
            <column-instance column='[JOB_TITLE_SUBGROUP]' derivation='None' name='[none:JOB_TITLE_SUBGROUP:nk]' pivot='key' type='nominal' />
            <column-instance column='[WORK_STATE]' derivation='None' name='[none:WORK_STATE:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_904379112755048453]' derivation='User' name='[usr:Calculation_904379112755048453:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1xjmzkx0pd9z3x1a5hzhx000vxfn'>
            <column datatype='real' name='[Price Parity]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1rnsf9d0cwda0m16bsgn61jjzk8w].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1rnsf9d0cwda0m16bsgn61jjzk8w].[usr:Calculation_904379112755048453:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1rnsf9d0cwda0m16bsgn61jjzk8w].[med:PAID_WAGE_PER_YEAR:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1rnsf9d0cwda0m16bsgn61jjzk8w].[none:Calculation_904379112741040129:nk]'>
            <groupfilter function='member' level='[none:Calculation_904379112741040129:nk]' member='&quot;View&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1rnsf9d0cwda0m16bsgn61jjzk8w].[none:Calculation_904379112741040129:nk]</column>
            <column>[federated.1rnsf9d0cwda0m16bsgn61jjzk8w].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1rnsf9d0cwda0m16bsgn61jjzk8w].[:Measure Names]' />
              <size column='[federated.1rnsf9d0cwda0m16bsgn61jjzk8w].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1rnsf9d0cwda0m16bsgn61jjzk8w].[Multiple Values]</rows>
        <cols>([federated.1rnsf9d0cwda0m16bsgn61jjzk8w].[none:JOB_TITLE_SUBGROUP:nk] / [federated.1rnsf9d0cwda0m16bsgn61jjzk8w].[none:WORK_STATE:nk])</cols>
      </table>
      <simple-id uuid='{A9179ADC-5BB6-4D36-A2D5-66FE70F6FA7D}' />
    </worksheet>
    <worksheet name='Only the Important States'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (salary_data_states_corrected)' name='federated.1rnsf9d0cwda0m16bsgn61jjzk8w' />
          </datasources>
          <datasource-dependencies datasource='federated.1rnsf9d0cwda0m16bsgn61jjzk8w'>
            <column caption='States We Are Interested In' datatype='string' name='[Calculation_904379112741040129]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF  [WORK_STATE] = &apos;California&apos;&#13;&#10;OR  [WORK_STATE] = &apos;Washington&apos;&#13;&#10;OR  [WORK_STATE] = &apos;Texas&apos;&#13;&#10;OR  [WORK_STATE] = &apos;Alabama&apos;&#13;&#10;OR  [WORK_STATE] = &apos;North Carolina&apos;&#13;&#10;OR  [WORK_STATE] = &apos;New York&apos;&#13;&#10;OR  [WORK_STATE] = &apos;Massachusetts&apos;&#13;&#10;OR  [WORK_STATE] = &apos;Maine&apos;&#13;&#10;THEN &quot;View&quot;&#13;&#10;ELSE &quot;Don&apos;t View&quot;&#13;&#10;END' />
            </column>
            <column caption='Job Title Subgroup' datatype='string' name='[JOB_TITLE_SUBGROUP]' role='dimension' type='nominal' />
            <column aggregation='Median' caption='Paid Wage Per Year' datatype='real' name='[PAID_WAGE_PER_YEAR]' role='measure' type='quantitative' />
            <column caption='Work State' datatype='string' name='[WORK_STATE]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[PAID_WAGE_PER_YEAR]' derivation='Median' name='[med:PAID_WAGE_PER_YEAR:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_904379112741040129]' derivation='None' name='[none:Calculation_904379112741040129:nk]' pivot='key' type='nominal' />
            <column-instance column='[JOB_TITLE_SUBGROUP]' derivation='None' name='[none:JOB_TITLE_SUBGROUP:nk]' pivot='key' type='nominal' />
            <column-instance column='[WORK_STATE]' derivation='None' name='[none:WORK_STATE:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1rnsf9d0cwda0m16bsgn61jjzk8w].[none:Calculation_904379112741040129:nk]'>
            <groupfilter function='member' level='[none:Calculation_904379112741040129:nk]' member='&quot;View&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[federated.1rnsf9d0cwda0m16bsgn61jjzk8w].[none:JOB_TITLE_SUBGROUP:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;data scientist&quot;</bucket>
              <bucket>&quot;software engineer&quot;</bucket>
              <bucket>&quot;assistant professor&quot;</bucket>
              <bucket>&quot;attorney&quot;</bucket>
              <bucket>&quot;business analyst&quot;</bucket>
              <bucket>&quot;data analyst&quot;</bucket>
              <bucket>&quot;management consultant&quot;</bucket>
              <bucket>&quot;teacher&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1rnsf9d0cwda0m16bsgn61jjzk8w].[none:WORK_STATE:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1rnsf9d0cwda0m16bsgn61jjzk8w].[med:PAID_WAGE_PER_YEAR:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.1rnsf9d0cwda0m16bsgn61jjzk8w].[none:Calculation_904379112741040129:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1rnsf9d0cwda0m16bsgn61jjzk8w].[none:JOB_TITLE_SUBGROUP:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1rnsf9d0cwda0m16bsgn61jjzk8w].[med:PAID_WAGE_PER_YEAR:qk]</rows>
        <cols>([federated.1rnsf9d0cwda0m16bsgn61jjzk8w].[none:JOB_TITLE_SUBGROUP:nk] / [federated.1rnsf9d0cwda0m16bsgn61jjzk8w].[none:WORK_STATE:nk])</cols>
      </table>
      <simple-id uuid='{C0B9F53D-F6F6-439C-89A6-123B162D8097}' />
    </worksheet>
    <worksheet name='Which States Have the Top Adjusted Wages'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (salary_data_states_corrected)' name='federated.1rnsf9d0cwda0m16bsgn61jjzk8w' />
            <datasource caption='Sheet1 (price_parity)' name='federated.1xjmzkx0pd9z3x1a5hzhx000vxfn' />
          </datasources>
          <datasource-dependencies datasource='federated.1rnsf9d0cwda0m16bsgn61jjzk8w'>
            <column caption='States We Are Interested In' datatype='string' name='[Calculation_904379112741040129]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF  [WORK_STATE] = &apos;California&apos;&#13;&#10;OR  [WORK_STATE] = &apos;Washington&apos;&#13;&#10;OR  [WORK_STATE] = &apos;Texas&apos;&#13;&#10;OR  [WORK_STATE] = &apos;Alabama&apos;&#13;&#10;OR  [WORK_STATE] = &apos;North Carolina&apos;&#13;&#10;OR  [WORK_STATE] = &apos;New York&apos;&#13;&#10;OR  [WORK_STATE] = &apos;Massachusetts&apos;&#13;&#10;OR  [WORK_STATE] = &apos;Maine&apos;&#13;&#10;THEN &quot;View&quot;&#13;&#10;ELSE &quot;Don&apos;t View&quot;&#13;&#10;END' />
            </column>
            <column caption='Adjusted Paid Wage' datatype='real' name='[Calculation_904379112755048453]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(MEDIAN([PAID_WAGE_PER_YEAR])/ATTR([federated.1xjmzkx0pd9z3x1a5hzhx000vxfn].[Price Parity]))*100' />
            </column>
            <column caption='Job Title Subgroup' datatype='string' name='[JOB_TITLE_SUBGROUP]' role='dimension' type='nominal' />
            <column aggregation='Median' caption='Paid Wage Per Year' datatype='real' name='[PAID_WAGE_PER_YEAR]' role='measure' type='quantitative' />
            <column caption='Work State' datatype='string' name='[WORK_STATE]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Calculation_904379112741040129]' derivation='None' name='[none:Calculation_904379112741040129:nk]' pivot='key' type='nominal' />
            <column-instance column='[JOB_TITLE_SUBGROUP]' derivation='None' name='[none:JOB_TITLE_SUBGROUP:nk]' pivot='key' type='nominal' />
            <column-instance column='[WORK_STATE]' derivation='None' name='[none:WORK_STATE:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_904379112755048453]' derivation='User' name='[rank:usr:Calculation_904379112755048453:ok:2]' pivot='key' type='ordinal'>
              <table-calc ordering-field='[federated.1rnsf9d0cwda0m16bsgn61jjzk8w].[none:WORK_STATE:nk]' ordering-type='Field' rank-options='Competition,Descending' type='Rank' />
            </column-instance>
            <column-instance column='[Calculation_904379112755048453]' derivation='User' name='[usr:Calculation_904379112755048453:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1xjmzkx0pd9z3x1a5hzhx000vxfn'>
            <column datatype='real' name='[Price Parity]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1rnsf9d0cwda0m16bsgn61jjzk8w].[none:Calculation_904379112741040129:nk]'>
            <groupfilter function='member' level='[none:Calculation_904379112741040129:nk]' member='&quot;View&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[federated.1rnsf9d0cwda0m16bsgn61jjzk8w].[none:WORK_STATE:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Washington&quot;</bucket>
              <bucket>&quot;California&quot;</bucket>
              <bucket>&quot;New York&quot;</bucket>
              <bucket>&quot;Texas&quot;</bucket>
              <bucket>&quot;North Carolina&quot;</bucket>
              <bucket>&quot;Massachusetts&quot;</bucket>
              <bucket>&quot;Alabama&quot;</bucket>
              <bucket>&quot;Maine&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1rnsf9d0cwda0m16bsgn61jjzk8w].[none:Calculation_904379112741040129:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1rnsf9d0cwda0m16bsgn61jjzk8w].[none:WORK_STATE:nk]' value='21' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.1rnsf9d0cwda0m16bsgn61jjzk8w].[rank:usr:Calculation_904379112755048453:ok:2]' value='false' />
            <format attr='text-orientation' field='[federated.1rnsf9d0cwda0m16bsgn61jjzk8w].[none:WORK_STATE:nk]' value='-90' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='div-level' scope='cols' value='1' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1rnsf9d0cwda0m16bsgn61jjzk8w].[usr:Calculation_904379112755048453:qk]</rows>
        <cols>([federated.1rnsf9d0cwda0m16bsgn61jjzk8w].[none:JOB_TITLE_SUBGROUP:nk] / ([federated.1rnsf9d0cwda0m16bsgn61jjzk8w].[rank:usr:Calculation_904379112755048453:ok:2] / [federated.1rnsf9d0cwda0m16bsgn61jjzk8w].[none:WORK_STATE:nk]))</cols>
      </table>
      <simple-id uuid='{8192AB25-F9FA-465B-A12D-5BE428F6A019}' />
    </worksheet>
  </worksheets>
  <windows saved-dpi-scale-factor='1.25' source-height='63'>
    <window class='worksheet' name='Only the Important States'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1rnsf9d0cwda0m16bsgn61jjzk8w].[none:Calculation_904379112741040129:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1rnsf9d0cwda0m16bsgn61jjzk8w].[none:JOB_TITLE_SUBGROUP:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1rnsf9d0cwda0m16bsgn61jjzk8w].[none:Calculation_904379112741040129:nk]</field>
            <field>[federated.1rnsf9d0cwda0m16bsgn61jjzk8w].[none:JOB_TITLE_SUBGROUP:nk]</field>
            <field>[federated.1rnsf9d0cwda0m16bsgn61jjzk8w].[none:WORK_STATE:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B53BABB1-0500-4B4A-9A3F-6BB1EE8EECCC}' />
    </window>
    <window class='worksheet' name='Companies that pay less than Average'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card param='[federated.1rnsf9d0cwda0m16bsgn61jjzk8w].[none:JOB_TITLE_SUBGROUP:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1rnsf9d0cwda0m16bsgn61jjzk8w].[cnt:Calculation_904379112744640514:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1rnsf9d0cwda0m16bsgn61jjzk8w].[none:Calculation_904379112745398275:nk]</field>
            <field>[federated.1rnsf9d0cwda0m16bsgn61jjzk8w].[none:EMPLOYER_NAME:nk]</field>
            <field>[federated.1rnsf9d0cwda0m16bsgn61jjzk8w].[none:JOB_TITLE_SUBGROUP:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B260152A-AB4A-4C44-97FD-31D69593EC32}' />
    </window>
    <window class='worksheet' name='Living Variance per State'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1rnsf9d0cwda0m16bsgn61jjzk8w].[none:Calculation_904379112741040129:nk]' type='filter' />
            <card pane-specification-id='1' param='[federated.1rnsf9d0cwda0m16bsgn61jjzk8w].[:Measure Names]' type='size' />
            <card pane-specification-id='1' param='[federated.1rnsf9d0cwda0m16bsgn61jjzk8w].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0bdd5fb1bwv0e91amamam1xc9ikt].[none:State:nk]</field>
            <field>[federated.1rnsf9d0cwda0m16bsgn61jjzk8w].[:Measure Names]</field>
            <field>[federated.1rnsf9d0cwda0m16bsgn61jjzk8w].[none:Calculation_904379112741040129:nk]</field>
            <field>[federated.1rnsf9d0cwda0m16bsgn61jjzk8w].[none:JOB_TITLE_SUBGROUP:nk]</field>
            <field>[federated.1rnsf9d0cwda0m16bsgn61jjzk8w].[none:WORK_STATE:nk]</field>
            <field>[federated.1xjmzkx0pd9z3x1a5hzhx000vxfn].[none:State:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{21FD6292-FA9C-4A33-8103-E85722372ED0}' />
    </window>
    <window class='worksheet' maximized='true' name='Which States Have the Top Adjusted Wages'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1rnsf9d0cwda0m16bsgn61jjzk8w].[none:Calculation_904379112741040129:nk]</field>
            <field>[federated.1rnsf9d0cwda0m16bsgn61jjzk8w].[none:JOB_TITLE_SUBGROUP:nk]</field>
            <field>[federated.1rnsf9d0cwda0m16bsgn61jjzk8w].[none:WORK_STATE:nk]</field>
            <field>[federated.1rnsf9d0cwda0m16bsgn61jjzk8w].[rank:usr:Calculation_904379112755048453:ok:2]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{530566B9-5A77-42C9-8085-8CE81BB8B960}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Companies that pay less than Average' width='192'>
      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
      yChpRwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Living Variance per State' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Only the Important States' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Which States Have the Top Adjusted Wages' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
